// errors, inferrable type is declared
let x: number = 7;
       ~~~~~~           [number]
let y: boolean = false;
       ~~~~~~~          [boolean]
let z: string = "foo";
       ~~~~~~           [string]

// not errors, we are skipping params
function foo (a: number = 5, b: boolean = true, c: string = "bah") { }

class TestClass {
   doSomething(a: number = 5, b: boolean = true, c: string = "bah") {}
}

// not errors, inferrable type is not declared
let _x = 7;
let _y = false;
let _z = "foo";

// not error, type is not inferrable
let weird: any = 123;

// not errors, inferrable type is not declared
function bar(a = 5, b = true, c = "bah") { }

// not errors, types are not inferrable
function baz(a: any = 5, b: any = true, c: any = "bah") { }

[number]: LHS type (number) inferred by RHS expression, remove type annotation
[boolean]: LHS type (boolean) inferred by RHS expression, remove type annotation
[string]: LHS type (string) inferred by RHS expression, remove type annotation
